{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mauro\\\\Desktop\\\\Atividades01_a_06\\\\Atividade06\\\\atv-react\\\\src\\\\Form.js\";\nimport React from 'react'; // import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n  constructor() {\n    super();\n\n    this.limpar = () => {\n      this.setState({\n        nome: ''\n      });\n    };\n\n    this.submeter = evento => {\n      evento.preventDefault();\n      this.setState({\n        nome: evento.target.value.toLowerCase().replace(/(?:^|\\s)\\S/g, function (a) {\n          return a.toUpperCase();\n        })\n      });\n    };\n\n    this.submeter = this.submeter.bind(this);\n    this.add = this.add.bind(this);\n    this.state = {\n      nome: ''\n    };\n  }\n\n  add() {\n    this.props.onButtonClick(this.state.nome);\n    this.setState({\n      nome: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submeter,\n      onReset: this.limpar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \" Nome \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"nome\",\n      type: \"text\",\n      value: this.state.nome,\n      onChange: this.alterar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.nome === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \" Salvar \"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"limpar\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \" Limpar \")));\n  }\n  /*    constructor() {\r\n          super();\r\n          this.changeNome = this.changeNome.bind(this);\r\n          this.add = this.add.bind(this);\r\n          this.state = {\r\n              nome: '',\r\n              pessoas: []\r\n          };\r\n      }\r\n  \r\n      add() {\r\n          this.props.onButtonClick(this.state.nome);\r\n          this.setState({ nome: '' });\r\n      }\r\n  \r\n      changeNome = event => {\r\n          \r\n         this.setState ({\r\n             nome: event.target.value.toLowerCase().replace(/(?:^|\\s)\\S/g, \r\n             function(a) { return a.toUpperCase(); })\r\n          });\r\n      };\r\n      \r\n      reset = event => {\r\n          event.preventDefault();\r\n          this.setState({\r\n              nome: ''\r\n          });\r\n      }\r\n  \r\n      submit = event => {\r\n          event.preventDefault();\r\n          if (this.state.nome.trim() !== '') {\r\n              this.state.pessoas.push({\r\n                  nome: this.state.nome\r\n              });\r\n              this.setState({\r\n                  errorMsg: \"\"\r\n              });\r\n              event.target.reset();            \r\n              function compare(a,b) {\r\n                if (a.nome < b.nome)\r\n                   return -1;\r\n                if (a.nome > b.nome)\r\n                  return 1;\r\n                return 0;\r\n              }\r\n              \r\n              this.state.pessoas.sort(compare);\r\n          } else{\r\n              this.setState({ errorMsg: \"O campo nome é obrigatório!\"});\r\n          }\r\n          \r\n      }\r\n      \r\n  \r\n      render() {\r\n          return (\r\n              <div className = 'container'> \r\n                  <form onSubmit = {this.submit} onReset = {this.reset}>\r\n                      <div>\r\n                          <label className = 'nome'> Nome </label>\r\n                          <input type = 'text' name = 'nome' value = {this.state.nome}\r\n                              id = 'input' onChange = {this.changeNome} />\r\n                      </div>\r\n  \r\n                      <div className = 'botoes'>\r\n                          <button type = 'submit' id = 'botao' disabled={!this.state.nome} > Salvar </button>\r\n                          <button id='limpar' type = 'reset'> Limpar </button>\r\n                      </div>\r\n  \r\n                      <div>\r\n                          {this.state.errorMsg}\r\n                      </div>\r\n                  </form>\r\n                  <Tabela lista = {this.state.pessoas} />\r\n              </div>\r\n          );\r\n      }\r\n      */\n\n\n}","map":{"version":3,"sources":["C:/Users/mauro/Desktop/Atividades01_a_06/Atividade06/atv-react/src/Form.js"],"names":["React","Form","Component","constructor","limpar","setState","nome","submeter","evento","preventDefault","target","value","toLowerCase","replace","a","toUpperCase","bind","add","state","props","onButtonClick","render","alterar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,GAAG;AACV;;AADU,SAadC,MAbc,GAaL,MAAM;AACX,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH,KAjBa;;AAAA,SAmBdC,QAnBc,GAmBFC,MAAD,IAAY;AACnBA,MAAAA,MAAM,CAACC,cAAP;AACA,WAAKJ,QAAL,CAAe;AACXC,QAAAA,IAAI,EAAEE,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoBC,WAApB,GAAkCC,OAAlC,CAA0C,aAA1C,EACN,UAASC,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACC,WAAF,EAAP;AAAyB,SADjC;AADK,OAAf;AAIH,KAzBa;;AAEV,SAAKR,QAAL,GAAgB,KAAKA,QAAL,CAAcS,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,GAAL,GAAW,KAAKA,GAAL,CAASD,IAAT,CAAc,IAAd,CAAX;AACA,SAAKE,KAAL,GAAa;AACTZ,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDW,EAAAA,GAAG,GAAG;AACF,SAAKE,KAAL,CAAWC,aAAX,CAAyB,KAAKF,KAAL,CAAWZ,IAApC;AACA,SAAKD,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAd;AACH;;AAeDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAI,KAAKd,QAAvB;AAAiC,MAAA,OAAO,EAAI,KAAKH,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,MAAA,IAAI,EAAG,MADX;AAEI,MAAA,IAAI,EAAG,MAFX;AAGI,MAAA,KAAK,EAAI,KAAKc,KAAL,CAAWZ,IAHxB;AAII,MAAA,QAAQ,EAAI,KAAKgB,OAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAG,QAAf;AACA,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWZ,IAAX,KAAoB,EAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAG,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CAVJ,CADJ;AAoBH;AAEL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAnDkD","sourcesContent":["import React from 'react';\r\n// import Tabela from './Tabela';\r\n\r\nexport default class Form extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.submeter = this.submeter.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.state = {\r\n            nome: ''\r\n        };\r\n    }\r\n\r\n    add() {\r\n        this.props.onButtonClick(this.state.nome);\r\n        this.setState({ nome: '' });\r\n    }\r\n    limpar = () => {\r\n        this.setState({\r\n            nome: ''\r\n        });\r\n    }\r\n\r\n    submeter = (evento) => {\r\n        evento.preventDefault();\r\n        this.setState ({\r\n            nome: evento.target.value.toLowerCase().replace(/(?:^|\\s)\\S/g, \r\n            function(a) { return a.toUpperCase(); })\r\n         }); \r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <form onSubmit = {this.submeter} onReset = {this.limpar}>\r\n                <div>\r\n                    <label> Nome </label>\r\n                    <input\r\n                        name = 'nome' \r\n                        type = 'text'\r\n                        value = {this.state.nome}\r\n                        onChange = {this.alterar} />\r\n                </div>\r\n\r\n                <div>\r\n                    <button type = 'submit'\r\n                    disabled={this.state.nome === ''} > Salvar </button>\r\n                    <button id='limpar' type = 'reset'> Limpar </button>\r\n                </div>\r\n\r\n            </form>\r\n        \r\n        );\r\n    }\r\n\r\n/*    constructor() {\r\n        super();\r\n        this.changeNome = this.changeNome.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.state = {\r\n            nome: '',\r\n            pessoas: []\r\n        };\r\n    }\r\n\r\n    add() {\r\n        this.props.onButtonClick(this.state.nome);\r\n        this.setState({ nome: '' });\r\n    }\r\n\r\n    changeNome = event => {\r\n        \r\n       this.setState ({\r\n           nome: event.target.value.toLowerCase().replace(/(?:^|\\s)\\S/g, \r\n           function(a) { return a.toUpperCase(); })\r\n        });\r\n    };\r\n    \r\n    reset = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            nome: ''\r\n        });\r\n    }\r\n\r\n    submit = event => {\r\n        event.preventDefault();\r\n        if (this.state.nome.trim() !== '') {\r\n            this.state.pessoas.push({\r\n                nome: this.state.nome\r\n            });\r\n            this.setState({\r\n                errorMsg: \"\"\r\n            });\r\n            event.target.reset();            \r\n            function compare(a,b) {\r\n              if (a.nome < b.nome)\r\n                 return -1;\r\n              if (a.nome > b.nome)\r\n                return 1;\r\n              return 0;\r\n            }\r\n            \r\n            this.state.pessoas.sort(compare);\r\n        } else{\r\n            this.setState({ errorMsg: \"O campo nome é obrigatório!\"});\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className = 'container'> \r\n                <form onSubmit = {this.submit} onReset = {this.reset}>\r\n                    <div>\r\n                        <label className = 'nome'> Nome </label>\r\n                        <input type = 'text' name = 'nome' value = {this.state.nome}\r\n                            id = 'input' onChange = {this.changeNome} />\r\n                    </div>\r\n\r\n                    <div className = 'botoes'>\r\n                        <button type = 'submit' id = 'botao' disabled={!this.state.nome} > Salvar </button>\r\n                        <button id='limpar' type = 'reset'> Limpar </button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {this.state.errorMsg}\r\n                    </div>\r\n                </form>\r\n                <Tabela lista = {this.state.pessoas} />\r\n            </div>\r\n        );\r\n    }\r\n    */\r\n}"]},"metadata":{},"sourceType":"module"}