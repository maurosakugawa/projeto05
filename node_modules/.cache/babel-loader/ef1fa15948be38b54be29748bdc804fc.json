{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mauro\\\\Desktop\\\\Atividades01_a_06\\\\Atividade06\\\\atv-react\\\\src\\\\Form.js\";\nimport React from 'react';\nexport default class Form extends React.Component {\n  constructor() {\n    super();\n\n    this.alterar = evento => {\n      this.setState({\n        nome: event.target.value\n      });\n    };\n\n    this.limpar = () => {\n      this.setState({\n        nome: ''\n      });\n    };\n\n    this.submeter = evento => {\n      evento.preventDefault();\n      this.props.add(this.state.nome);\n      this.limpar();\n    };\n\n    this.state = {\n      nome: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onReset: this.limpar,\n      onSubmit: this.submeter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.nome,\n      onChange: this.alterar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.nome == '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Salvar\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Limpar\")));\n  }\n\n}\n/*    constructor() {\r\n        super();\r\n        this.changeNome = this.changeNome.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.state = {\r\n            nome: '',\r\n            pessoas: []\r\n        };\r\n    }\r\n\r\n    add() {\r\n        this.props.onButtonClick(this.state.nome);\r\n        this.setState({ nome: '' });\r\n    }\r\n\r\n    changeNome = event => {\r\n        \r\n       this.setState ({\r\n           nome: event.target.value.toLowerCase().replace(/(?:^|\\s)\\S/g, \r\n           function(a) { return a.toUpperCase(); })\r\n        });\r\n    };\r\n    \r\n    reset = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            nome: ''\r\n        });\r\n    }\r\n\r\n    submit = event => {\r\n        event.preventDefault();\r\n        if (this.state.nome.trim() !== '') {\r\n            this.state.pessoas.push({\r\n                nome: this.state.nome\r\n            });\r\n            this.setState({\r\n                errorMsg: \"\"\r\n            });\r\n            event.target.reset();            \r\n            function compare(a,b) {\r\n              if (a.nome < b.nome)\r\n                 return -1;\r\n              if (a.nome > b.nome)\r\n                return 1;\r\n              return 0;\r\n            }\r\n            \r\n            this.state.pessoas.sort(compare);\r\n        } else{\r\n            this.setState({ errorMsg: \"O campo nome é obrigatório!\"});\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className = 'container'> \r\n                <form onSubmit = {this.submit} onReset = {this.reset}>\r\n                    <div>\r\n                        <label className = 'nome'> Nome </label>\r\n                        <input type = 'text' name = 'nome' value = {this.state.nome}\r\n                            id = 'input' onChange = {this.changeNome} />\r\n                    </div>\r\n\r\n                    <div className = 'botoes'>\r\n                        <button type = 'submit' id = 'botao' disabled={!this.state.nome} > Salvar </button>\r\n                        <button id='limpar' type = 'reset'> Limpar </button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {this.state.errorMsg}\r\n                    </div>\r\n                </form>\r\n                <Tabela lista = {this.state.pessoas} />\r\n            </div>\r\n        );\r\n    }\r\n    */","map":{"version":3,"sources":["C:/Users/mauro/Desktop/Atividades01_a_06/Atividade06/atv-react/src/Form.js"],"names":["React","Form","Component","constructor","alterar","evento","setState","nome","event","target","value","limpar","submeter","preventDefault","props","add","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,GAAE;AACX;;AADW,SAObC,OAPa,GAOFC,MAAD,IAAY;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEC,KAAK,CAACC,MAAN,CAAaC;AADP,OAAd;AAGD,KAXY;;AAAA,SAabC,MAba,GAaJ,MAAM;AACb,WAAKL,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAjBY;;AAAA,SAmBbK,QAnBa,GAmBDP,MAAD,IAAY;AACrBA,MAAAA,MAAM,CAACQ,cAAP;AACA,WAAKC,KAAL,CAAWC,GAAX,CAAe,KAAKC,KAAL,CAAWT,IAA1B;AACA,WAAKI,MAAL;AACD,KAvBY;;AAEX,SAAKK,KAAL,GAAa;AACXT,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAoBDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,OAAO,EAAE,KAAKN,MAApB;AAA4B,MAAA,QAAQ,EAAE,KAAKC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWT,IADpB;AAEE,MAAA,QAAQ,EAAE,KAAKH,OAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,KAAKY,KAAL,CAAWT,IAAX,IAAmB,EAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CAPF,CADF;AAkBD;;AA7C+C;AAgDlD","sourcesContent":["import React from 'react';\r\n\r\nexport default class Form extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      nome: ''\r\n    }\r\n  }\r\n\r\n  alterar = (evento) => {\r\n    this.setState({\r\n      nome: event.target.value \r\n    });\r\n  }\r\n\r\n  limpar = () => {\r\n    this.setState({\r\n      nome: ''\r\n    });\r\n  }\r\n\r\n  submeter = (evento) => {\r\n    evento.preventDefault()\r\n    this.props.add(this.state.nome);\r\n    this.limpar();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onReset={this.limpar} onSubmit={this.submeter}>\r\n        <div>\r\n          <label>Nome</label> \r\n          <input \r\n            value={this.state.nome}\r\n            onChange={this.alterar} />\r\n        </div>\r\n        <div>\r\n          <button \r\n            type=\"submit\"\r\n            disabled={this.state.nome == ''}>\r\n            Salvar\r\n          </button>\r\n          <button type=\"reset\">Limpar</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n/*    constructor() {\r\n        super();\r\n        this.changeNome = this.changeNome.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.state = {\r\n            nome: '',\r\n            pessoas: []\r\n        };\r\n    }\r\n\r\n    add() {\r\n        this.props.onButtonClick(this.state.nome);\r\n        this.setState({ nome: '' });\r\n    }\r\n\r\n    changeNome = event => {\r\n        \r\n       this.setState ({\r\n           nome: event.target.value.toLowerCase().replace(/(?:^|\\s)\\S/g, \r\n           function(a) { return a.toUpperCase(); })\r\n        });\r\n    };\r\n    \r\n    reset = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            nome: ''\r\n        });\r\n    }\r\n\r\n    submit = event => {\r\n        event.preventDefault();\r\n        if (this.state.nome.trim() !== '') {\r\n            this.state.pessoas.push({\r\n                nome: this.state.nome\r\n            });\r\n            this.setState({\r\n                errorMsg: \"\"\r\n            });\r\n            event.target.reset();            \r\n            function compare(a,b) {\r\n              if (a.nome < b.nome)\r\n                 return -1;\r\n              if (a.nome > b.nome)\r\n                return 1;\r\n              return 0;\r\n            }\r\n            \r\n            this.state.pessoas.sort(compare);\r\n        } else{\r\n            this.setState({ errorMsg: \"O campo nome é obrigatório!\"});\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className = 'container'> \r\n                <form onSubmit = {this.submit} onReset = {this.reset}>\r\n                    <div>\r\n                        <label className = 'nome'> Nome </label>\r\n                        <input type = 'text' name = 'nome' value = {this.state.nome}\r\n                            id = 'input' onChange = {this.changeNome} />\r\n                    </div>\r\n\r\n                    <div className = 'botoes'>\r\n                        <button type = 'submit' id = 'botao' disabled={!this.state.nome} > Salvar </button>\r\n                        <button id='limpar' type = 'reset'> Limpar </button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {this.state.errorMsg}\r\n                    </div>\r\n                </form>\r\n                <Tabela lista = {this.state.pessoas} />\r\n            </div>\r\n        );\r\n    }\r\n    */\r\n"]},"metadata":{},"sourceType":"module"}